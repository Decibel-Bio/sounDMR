% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Sound_DMR.R, R/Sound_DMR_formatted.R
\name{create_gene_percent_x}
\alias{create_gene_percent_x}
\title{Create Gene Percent Data Frames}
\usage{
create_gene_percent_x(long_percent, x = "Chromosome", function_name = mean)

create_gene_percent_x(long_percent, x = "Chromosome", function_name = mean)
}
\arguments{
\item{long_percent}{(df) - containing the methylation data as percents in
long format using \code{dcast()}}

\item{x}{(str) the column to compare to Gene * Zeroth_pos}

\item{function_name}{(function) an aggregation function such as mean, sd, or
var}

\item{LongPercent}{(df) - containing the methylation data as percents in
long format using \code{dcast()}}
}
\value{
dcast_output (df) - a subset of the LongPercent dataframe

dcast_output (df) - a subset of the long_percent dataframe
}
\description{
A function to create different subsets of the LongPercent df depending on the
column of interest

A function to create different subsets of the long_percent df depending on
the column of interest
}
\examples{
# Generate sample data
LongPercent <- data.frame(
 Gene = c('Gene1', 'Gene1', 'Gene1', 'Gene2', 'Gene2'),
 Zeroth_pos = c(1, 1, 1, 2, 2),
 Group = c('C', 'C', 'T', 'C', 'T'),
 Percent = c(30, 50, 0, 75, 80))

# Aggregate based on Group using mean
create_gene_percent_x(LongPercent, 'Group', mean)

# Aggregate based on Group using standard deviation
create_gene_percent_x(LongPercent, 'Group', sd)

# Generate sample data
long_percent <- data.frame(
 Gene = c('Gene1', 'Gene1', 'Gene1', 'Gene2', 'Gene2'),
 Zeroth_pos = c(1, 1, 1, 2, 2),
 Group = c('C', 'C', 'T', 'C', 'T'),
 Percent = c(30, 50, 0, 75, 80))

# Aggregate based on Group using mean
create_gene_percent_x(long_percent, 'Group', mean)

# Aggregate based on Group using standard deviation
create_gene_percent_x(long_percent, 'Group', sd)

}
